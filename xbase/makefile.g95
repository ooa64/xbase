#    This file is part of the XBase libraries
#    Copyright (C) 2000 Derry Bryson
#
#
#    This library is free software; you can redistribute it and/or
#    modify it under the terms of the GNU Lesser General Public
#    License as published by the Free Software Foundation; either
#    version 2.1 of the License, or (at your option) any later version.
#
#    This library is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#    Lesser General Public License for more details.
#
#    You should have received a copy of the GNU Lesser General Public
#    License along with this library; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#    Contact:
#
#      Mail:
#
#        Technology Associates, Inc.
#        XBase Project
#        1455 Deming Way #11
#        Sparks, NV 89434
#        USA
#
#      Email:
#
#        xbase@techass.com
#
#      See our website at:
#
#        xdb.sourceforge.net
#

#
# Makefile for Mingw32.  This makefile builds a static and dynamic/shared
# version of the XBase library.  Note, this makefile was derived from the
# c++ example in Mumit Kahn's dllhelper archive.
#
CC = gcc
CXX = c++

#
# Uncomment the next line to enable debug code.  Note that XBASE_DEBUG
# is also (possibly) defined in xbconfigw32.h (it is by default).
#

#DEBUG = -g -DXBASE_DEBUG
CXXFLAGS = -O2 $(DEBUG) -Wall --pipe -fvtable-thunks
CFLAGS = -02 $(DEBUG) -Wall --pipe
CPPFLAGS = -I..

AS = as
DLLTOOL = dlltool
DLLWRAP = dllwrap

exeext = .exe

#
# Various targets to build.
#
VERSION = 2.1.0
DLL_NAME = xbase-$(VERSION).dll
DLL_EXP_LIB = libxbasedll.a
DLL_EXP_DEF = xbase-$(VERSION).def
STATICLIB_NAME = libxbase.a

#
# Directory to install DLL into
#
WIN32_SYSTEM_DIR = \winnt\system32

#
# Directory to install development libs into
#
INSTALL_LIB_DIR = \mingw\lib

#
# Directory to install header files into
#
INSTALL_INCLUDE_DIR = \mingw\include

DLL_OBJ_DIR = dobj
STATIC_OBJ_DIR = sobj

all: $(DLL_OBJ_DIR) $(STATIC_OBJ_DIR) $(DLL_NAME) $(STATICLIB_NAME)
#all: $(STATIC_OBJ_DIR) $(STATICLIB_NAME)

$(DLL_OBJ_DIR) :
	-md $(DLL_OBJ_DIR)

$(STATIC_OBJ_DIR) :
	-md $(STATIC_OBJ_DIR)

#
# DLL related variables. These are used when building the DLL. See later.
#

# Must define XBMAKINGDLL when building the DLL. Otherwise import/exports
# will not work correctly.
DLL_CFLAGS = -DXBMAKINGDLL -mdll
# The default entry point defined by dllwrap; the default user callback
# is DllMain, and there is stub in dllinit.c.
DLL_LDFLAGS =
# any extra libraries that your DLL may depend on.
DLL_LDLIBS = -lstdc++

OBJS  = \
	dbf.o \
	exp.o \
	expfunc.o \
	expproc.o \
	fields.o \
	html.o \
	index.o \
	lock.o \
	memo.o \
	ndx.o \
	ntx.o \
	stack.o \
	xbase.o \
	xbexcept.o \
	xbfilter.o \
	xbstring.o \
	xdate.o

DLL_OBJS = $(addprefix $(DLL_OBJ_DIR)/,$(OBJS))

STATIC_OBJS = $(addprefix $(STATIC_OBJ_DIR)/,$(OBJS))

#
# Note that we let dllwrap create both the DEF and IMPORT library in
# one shot. No need to run dlltool anymore.
#
DLLWRAP_FLAGS = --export-all --output-def $(DLL_EXP_DEF) \
	--implib $(DLL_EXP_LIB) \
	--driver-name $(CXX)

$(DLL_NAME) $(DLL_EXP_DEF) $(DLL_EXP_LIB): $(DLL_OBJS)
	$(CC) -shared -o $@ -Wl,--output-def,$(DLL_EXP_DEF) \
        	-Wl,--out-implib,$(DLL_EXP_LIB) $(DLL_OBJS) \
                $(DLL_LDFLAGS) $(DLL_LDLIBS)
#	$(DLLWRAP) $(DLLWRAP_FLAGS) -o $(DLL_NAME) \
#	    $(DLL_OBJS) $(DLL_LDFLAGS) $(DLL_LDLIBS)

$(STATICLIB_NAME) : $(STATIC_OBJS)
	ar -ru $(STATICLIB_NAME) $(STATIC_OBJS)
	ranlib $(STATICLIB_NAME)

install : all
	copy $(DLL_NAME) $(WIN32_SYSTEM_DIR)
	copy $(DLL_EXP_LIB) $(INSTALL_LIB_DIR)
	copy $(DLL_EXP_DEF) $(INSTALL_LIB_DIR)
	copy $(STATICLIB_NAME) $(INSTALL_LIB_DIR)
	-md $(INSTALL_INCLUDE_DIR)\xbase
	copy *.h $(INSTALL_INCLUDE_DIR)\xbase

clean:
	-del $(DLL_OBJ_DIR)\*.o $(STATIC_OBJ_DIR)\*.o $(DLL_NAME) $(DLL_EXP_LIB) $(DLL_EXP_DEF) $(STATICLIB_NAME)

#
# dependencies (need better ones!).
#

$(DLL_OBJS) $(STATIC_OBJS) : \
	xbase.h \
	dbf.h \
	exp.h \
	html.h \
	index.h \
	ndx.h \
	ntx.h \
	retcodes.h \
	xbase.h \
	xbconfigw32.h \
	xbexcept.h \
	xbfilter.h \
	xbstring.h \
	xdate.h \
	xstack.h \
	xtypes.h

#
# default rules for building DLL objects. Note that client programs (ie.,
# the ones that *use* the DLL) have to be compiled without the DLL_CFLAGS
# flags.
#
$(DLL_OBJ_DIR)/%.o : %.cpp
	$(CXX) -c $(DLL_CFLAGS) $(CPPFLAGS) $(CXXFLAGS) -o $@ $<
$(DLL_OBJ_DIR)/%.o : %.c
	$(CC) -c $(DLL_CFLAGS) $(CPPFLAGS) $(CFLAGS) -o $@ $<

#
# default rules for building static objects.
#
$(STATIC_OBJ_DIR)/%.o : %.cpp
	$(CXX) -c $(CPPFLAGS) $(CXXFLAGS) -o $@ $<
$(STATIC_OBJ_DIR)/%.o : %.c
	$(CC) -c $ $(CPPFLAGS) $(CFLAGS) -o $@ $<


